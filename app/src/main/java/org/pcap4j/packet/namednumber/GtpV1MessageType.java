package org.pcap4j.packet.namednumber;

import java.util.HashMap;
import java.util.Map;

/* loaded from: combined.jar:classes3.jar:org/pcap4j/packet/namednumber/GtpV1MessageType.class */
public final class GtpV1MessageType extends NamedNumber<Byte, GtpV1MessageType> {
    public static final GtpV1MessageType CREATE_MBMS_CONTEXT_REQUEST;
    public static final GtpV1MessageType CREATE_MBMS_CONTEXT_RESPONSE;
    public static final GtpV1MessageType CREATE_PDP_CONTEXT_REQUEST;
    public static final GtpV1MessageType CREATE_PDP_CONTEXT_RESPONSE;
    public static final GtpV1MessageType DATA_RECORD_TRANSFER_REQUEST;
    public static final GtpV1MessageType DATA_RECORD_TRANSFER_RESPONSE;
    public static final GtpV1MessageType DELETE_MBMS_CONTEXT_REQUEST;
    public static final GtpV1MessageType DELETE_MBMS_CONTEXT_RESPONSE;
    public static final GtpV1MessageType DELETE_PDP_CONTEXT_REQUEST;
    public static final GtpV1MessageType DELETE_PDP_CONTEXT_RESPONSE;
    public static final GtpV1MessageType ECHO_REQUEST;
    public static final GtpV1MessageType ECHO_RESPONSE;
    public static final GtpV1MessageType END_MARKER;
    public static final GtpV1MessageType ERROR_INDICATION;
    public static final GtpV1MessageType FAILURE_REPORT_REQUEST;
    public static final GtpV1MessageType FAILURE_REPORT_RESPONSE;
    public static final GtpV1MessageType FORWARD_RELOCATION_COMPLETE;
    public static final GtpV1MessageType FORWARD_RELOCATION_COMPLETE_ACKNOWLEDGE;
    public static final GtpV1MessageType FORWARD_RELOCATION_REQUEST;
    public static final GtpV1MessageType FORWARD_RELOCATION_RESPONSE;
    public static final GtpV1MessageType FORWARD_SNRS_CONTEXT;
    public static final GtpV1MessageType FORWARD_SNRS_CONTEXT_ACKNOWLEDGE;
    public static final GtpV1MessageType G_PDU;
    public static final GtpV1MessageType IDENTIFICATION_REQUEST;
    public static final GtpV1MessageType IDENTIFICATION_RESPONSE;
    public static final GtpV1MessageType INITIATE_PDP_CONTEXT_ACTIVATION_REQUEST;
    public static final GtpV1MessageType INITIATE_PDP_CONTEXT_ACTIVATION_RESPONSE;
    public static final GtpV1MessageType MBMS_DE_REGISTRATION_REQUEST;
    public static final GtpV1MessageType MBMS_DE_REGISTRATION_RESPONSE;
    public static final GtpV1MessageType MBMS_NOTIFICATION_REJECT_REQUEST;
    public static final GtpV1MessageType MBMS_NOTIFICATION_REJECT_RESPONSE;
    public static final GtpV1MessageType MBMS_NOTIFICATION_REQUEST;
    public static final GtpV1MessageType MBMS_NOTIFICATION_RESPONSE;
    public static final GtpV1MessageType MBMS_REGISTRATION_REQUEST;
    public static final GtpV1MessageType MBMS_REGISTRATION_RESPONSE;
    public static final GtpV1MessageType MBMS_SESSION_START_REQUEST;
    public static final GtpV1MessageType MBMS_SESSION_START_RESPONSE;
    public static final GtpV1MessageType MBMS_SESSION_STOP_REQUEST;
    public static final GtpV1MessageType MBMS_SESSION_STOP_RESPONSE;
    public static final GtpV1MessageType MBMS_SESSION_UPDATE_REQUEST;
    public static final GtpV1MessageType MBMS_SESSION_UPDATE_RESPONSE;
    public static final GtpV1MessageType MS_INFO_CHANGE_NOTIFICATION_REQUEST;
    public static final GtpV1MessageType MS_INFO_CHANGE_NOTIFICATION_RESPONSE;
    public static final GtpV1MessageType NODE_ALIVE_REQUEST;
    public static final GtpV1MessageType NODE_ALIVE_RESPONSE;
    public static final GtpV1MessageType NOTE_MS_GPRS_PRESENT_REQUEST;
    public static final GtpV1MessageType NOTE_MS_GPRS_PRESENT_RESPONSE;
    public static final GtpV1MessageType PDU_NOTIFICATION_REJECT_REQUEST;
    public static final GtpV1MessageType PDU_NOTIFICATION_REJECT_RESPONSE;
    public static final GtpV1MessageType PDU_NOTIFICATION_REQUEST;
    public static final GtpV1MessageType PDU_NOTIFICATION_RESPONSE;
    public static final GtpV1MessageType RAN_INFORMATION_RELAY;
    public static final GtpV1MessageType REDIRECTION_REQUEST;
    public static final GtpV1MessageType REDIRECTION_RESPONSE;
    public static final GtpV1MessageType RELOCATION_CANCEL_REQUEST;
    public static final GtpV1MessageType RELOCATION_CANCEL_RESPONSE;
    public static final GtpV1MessageType SEND_ROUTING_INFORMATION_FOR_GPRS_REQUEST;
    public static final GtpV1MessageType SEND_ROUTING_INFORMATION_FOR_GPRS_RESPONSE;
    public static final GtpV1MessageType SGSN_CONTEXT_ACKNOWLEDGE;
    public static final GtpV1MessageType SGSN_CONTEXT_REQUEST;
    public static final GtpV1MessageType SGSN_CONTEXT_RESPONSE;
    public static final GtpV1MessageType SUPPORTED_EXTENSION_HEADERS_NOTIFICATION;
    public static final GtpV1MessageType UPDATE_MBMS_CONTEXT_REQUEST;
    public static final GtpV1MessageType UPDATE_MBMS_CONTEXT_RESPONSE;
    public static final GtpV1MessageType UPDATE_PDP_CONTEXT_REQUEST;
    public static final GtpV1MessageType UPDATE_PDP_CONTEXT_RESPONSE;
    public static final GtpV1MessageType VERSION_NOT_SUPPORTED;
    private static final Map<Byte, GtpV1MessageType> registry;
    private static final long serialVersionUID = 7592798859079852877L;

    static {
        GtpV1MessageType gtpV1MessageType = new GtpV1MessageType((byte) 1, "Echo Request");
        ECHO_REQUEST = gtpV1MessageType;
        GtpV1MessageType gtpV1MessageType2 = new GtpV1MessageType((byte) 2, "Echo Response");
        ECHO_RESPONSE = gtpV1MessageType2;
        GtpV1MessageType gtpV1MessageType3 = new GtpV1MessageType((byte) 3, "Version Not Supported");
        VERSION_NOT_SUPPORTED = gtpV1MessageType3;
        GtpV1MessageType gtpV1MessageType4 = new GtpV1MessageType((byte) 4, "Node Alive Request");
        NODE_ALIVE_REQUEST = gtpV1MessageType4;
        GtpV1MessageType gtpV1MessageType5 = new GtpV1MessageType((byte) 5, "Node Alive Response");
        NODE_ALIVE_RESPONSE = gtpV1MessageType5;
        GtpV1MessageType gtpV1MessageType6 = new GtpV1MessageType((byte) 6, "Redirection Request");
        REDIRECTION_REQUEST = gtpV1MessageType6;
        GtpV1MessageType gtpV1MessageType7 = new GtpV1MessageType((byte) 7, "Redirection Response");
        REDIRECTION_RESPONSE = gtpV1MessageType7;
        GtpV1MessageType gtpV1MessageType8 = new GtpV1MessageType((byte) 16, "Create PDP Context Request");
        CREATE_PDP_CONTEXT_REQUEST = gtpV1MessageType8;
        GtpV1MessageType gtpV1MessageType9 = new GtpV1MessageType((byte) 17, "Create PDP Context Response");
        CREATE_PDP_CONTEXT_RESPONSE = gtpV1MessageType9;
        GtpV1MessageType gtpV1MessageType10 = new GtpV1MessageType((byte) 18, "Update PDP Context Request");
        UPDATE_PDP_CONTEXT_REQUEST = gtpV1MessageType10;
        GtpV1MessageType gtpV1MessageType11 = new GtpV1MessageType((byte) 19, "Update PDP Context Response");
        UPDATE_PDP_CONTEXT_RESPONSE = gtpV1MessageType11;
        GtpV1MessageType gtpV1MessageType12 = new GtpV1MessageType((byte) 20, "Delete PDP Context Request");
        DELETE_PDP_CONTEXT_REQUEST = gtpV1MessageType12;
        GtpV1MessageType gtpV1MessageType13 = new GtpV1MessageType((byte) 21, "Delete PDP Context Response");
        DELETE_PDP_CONTEXT_RESPONSE = gtpV1MessageType13;
        GtpV1MessageType gtpV1MessageType14 = new GtpV1MessageType((byte) 22, "Initiate PDP Context Activation Request");
        INITIATE_PDP_CONTEXT_ACTIVATION_REQUEST = gtpV1MessageType14;
        GtpV1MessageType gtpV1MessageType15 = new GtpV1MessageType((byte) 22, "Initiate PDP Context Activation Response");
        INITIATE_PDP_CONTEXT_ACTIVATION_RESPONSE = gtpV1MessageType15;
        GtpV1MessageType gtpV1MessageType16 = new GtpV1MessageType((byte) 26, "Error Indication");
        ERROR_INDICATION = gtpV1MessageType16;
        GtpV1MessageType gtpV1MessageType17 = new GtpV1MessageType((byte) 27, "PDU Notification Request");
        PDU_NOTIFICATION_REQUEST = gtpV1MessageType17;
        GtpV1MessageType gtpV1MessageType18 = new GtpV1MessageType((byte) 28, "PDU Notification Response");
        PDU_NOTIFICATION_RESPONSE = gtpV1MessageType18;
        GtpV1MessageType gtpV1MessageType19 = new GtpV1MessageType((byte) 29, "PDU Notification Reject Request");
        PDU_NOTIFICATION_REJECT_REQUEST = gtpV1MessageType19;
        GtpV1MessageType gtpV1MessageType20 = new GtpV1MessageType((byte) 30, "PDU Notification Reject Response");
        PDU_NOTIFICATION_REJECT_RESPONSE = gtpV1MessageType20;
        GtpV1MessageType gtpV1MessageType21 = new GtpV1MessageType((byte) 31, "Supported Extension Headers Notification");
        SUPPORTED_EXTENSION_HEADERS_NOTIFICATION = gtpV1MessageType21;
        GtpV1MessageType gtpV1MessageType22 = new GtpV1MessageType((byte) 32, "Send Routing Information for GPRS Request");
        SEND_ROUTING_INFORMATION_FOR_GPRS_REQUEST = gtpV1MessageType22;
        GtpV1MessageType gtpV1MessageType23 = new GtpV1MessageType((byte) 33, "Send Routing Information for GPRS Response");
        SEND_ROUTING_INFORMATION_FOR_GPRS_RESPONSE = gtpV1MessageType23;
        GtpV1MessageType gtpV1MessageType24 = new GtpV1MessageType((byte) 34, "Failure Report Request");
        FAILURE_REPORT_REQUEST = gtpV1MessageType24;
        GtpV1MessageType gtpV1MessageType25 = new GtpV1MessageType((byte) 35, "Failure Report Response");
        FAILURE_REPORT_RESPONSE = gtpV1MessageType25;
        GtpV1MessageType gtpV1MessageType26 = new GtpV1MessageType((byte) 36, "Note MS GPRS Present Request");
        NOTE_MS_GPRS_PRESENT_REQUEST = gtpV1MessageType26;
        GtpV1MessageType gtpV1MessageType27 = new GtpV1MessageType((byte) 37, "Note MS GPRS Present Response");
        NOTE_MS_GPRS_PRESENT_RESPONSE = gtpV1MessageType27;
        GtpV1MessageType gtpV1MessageType28 = new GtpV1MessageType((byte) 48, "Identification Request");
        IDENTIFICATION_REQUEST = gtpV1MessageType28;
        GtpV1MessageType gtpV1MessageType29 = new GtpV1MessageType((byte) 49, "Identification Response");
        IDENTIFICATION_RESPONSE = gtpV1MessageType29;
        GtpV1MessageType gtpV1MessageType30 = new GtpV1MessageType((byte) 50, "SGSN Context Request");
        SGSN_CONTEXT_REQUEST = gtpV1MessageType30;
        GtpV1MessageType gtpV1MessageType31 = new GtpV1MessageType((byte) 51, "SGSN Context Response");
        SGSN_CONTEXT_RESPONSE = gtpV1MessageType31;
        GtpV1MessageType gtpV1MessageType32 = new GtpV1MessageType((byte) 52, "SGSN Context Acknowledge");
        SGSN_CONTEXT_ACKNOWLEDGE = gtpV1MessageType32;
        GtpV1MessageType gtpV1MessageType33 = new GtpV1MessageType((byte) 53, "Forward Relocation Request");
        FORWARD_RELOCATION_REQUEST = gtpV1MessageType33;
        GtpV1MessageType gtpV1MessageType34 = new GtpV1MessageType((byte) 54, "Forward Relocation Response");
        FORWARD_RELOCATION_RESPONSE = gtpV1MessageType34;
        GtpV1MessageType gtpV1MessageType35 = new GtpV1MessageType((byte) 55, "Forward Relocation Complete");
        FORWARD_RELOCATION_COMPLETE = gtpV1MessageType35;
        GtpV1MessageType gtpV1MessageType36 = new GtpV1MessageType((byte) 56, "Relocation Cancel Request");
        RELOCATION_CANCEL_REQUEST = gtpV1MessageType36;
        GtpV1MessageType gtpV1MessageType37 = new GtpV1MessageType((byte) 57, "Relocation Cancel Response");
        RELOCATION_CANCEL_RESPONSE = gtpV1MessageType37;
        GtpV1MessageType gtpV1MessageType38 = new GtpV1MessageType((byte) 58, "Forward SNRS Context");
        FORWARD_SNRS_CONTEXT = gtpV1MessageType38;
        GtpV1MessageType gtpV1MessageType39 = new GtpV1MessageType((byte) 59, "Forward Relocation Complete Acknowledge");
        FORWARD_RELOCATION_COMPLETE_ACKNOWLEDGE = gtpV1MessageType39;
        GtpV1MessageType gtpV1MessageType40 = new GtpV1MessageType((byte) 60, "Forward SNRS Context Acknowledge");
        FORWARD_SNRS_CONTEXT_ACKNOWLEDGE = gtpV1MessageType40;
        GtpV1MessageType gtpV1MessageType41 = new GtpV1MessageType((byte) 70, "RAN Information Relay");
        RAN_INFORMATION_RELAY = gtpV1MessageType41;
        GtpV1MessageType gtpV1MessageType42 = new GtpV1MessageType((byte) 96, "MBMS Notification Request");
        MBMS_NOTIFICATION_REQUEST = gtpV1MessageType42;
        GtpV1MessageType gtpV1MessageType43 = new GtpV1MessageType((byte) 97, "MBMS Notification Response");
        MBMS_NOTIFICATION_RESPONSE = gtpV1MessageType43;
        GtpV1MessageType gtpV1MessageType44 = new GtpV1MessageType((byte) 98, "MBMS Notification Request");
        MBMS_NOTIFICATION_REJECT_REQUEST = gtpV1MessageType44;
        GtpV1MessageType gtpV1MessageType45 = new GtpV1MessageType((byte) 99, "MBMS Notification Response");
        MBMS_NOTIFICATION_REJECT_RESPONSE = gtpV1MessageType45;
        GtpV1MessageType gtpV1MessageType46 = new GtpV1MessageType((byte) 100, "Create MBMS Context Request");
        CREATE_MBMS_CONTEXT_REQUEST = gtpV1MessageType46;
        GtpV1MessageType gtpV1MessageType47 = new GtpV1MessageType((byte) 101, "Create MBMS Context Response");
        CREATE_MBMS_CONTEXT_RESPONSE = gtpV1MessageType47;
        GtpV1MessageType gtpV1MessageType48 = new GtpV1MessageType((byte) 102, "Update MBMS Context Request");
        UPDATE_MBMS_CONTEXT_REQUEST = gtpV1MessageType48;
        GtpV1MessageType gtpV1MessageType49 = new GtpV1MessageType((byte) 103, "Update MBMS Context Response");
        UPDATE_MBMS_CONTEXT_RESPONSE = gtpV1MessageType49;
        GtpV1MessageType gtpV1MessageType50 = new GtpV1MessageType((byte) 104, "Delete MBMS Context Request");
        DELETE_MBMS_CONTEXT_REQUEST = gtpV1MessageType50;
        GtpV1MessageType gtpV1MessageType51 = new GtpV1MessageType((byte) 105, "Delete MBMS Context Response");
        DELETE_MBMS_CONTEXT_RESPONSE = gtpV1MessageType51;
        GtpV1MessageType gtpV1MessageType52 = new GtpV1MessageType((byte) 112, "MBMS Registration Request");
        MBMS_REGISTRATION_REQUEST = gtpV1MessageType52;
        GtpV1MessageType gtpV1MessageType53 = new GtpV1MessageType((byte) 113, "MBMS Registration Response");
        MBMS_REGISTRATION_RESPONSE = gtpV1MessageType53;
        GtpV1MessageType gtpV1MessageType54 = new GtpV1MessageType((byte) 114, "MBMS De Registration Request");
        MBMS_DE_REGISTRATION_REQUEST = gtpV1MessageType54;
        GtpV1MessageType gtpV1MessageType55 = new GtpV1MessageType((byte) 115, "MBMS De Registration Response");
        MBMS_DE_REGISTRATION_RESPONSE = gtpV1MessageType55;
        GtpV1MessageType gtpV1MessageType56 = new GtpV1MessageType((byte) 116, "MBMS Session Start Request");
        MBMS_SESSION_START_REQUEST = gtpV1MessageType56;
        GtpV1MessageType gtpV1MessageType57 = new GtpV1MessageType((byte) 117, "MBMS Session Start Response");
        MBMS_SESSION_START_RESPONSE = gtpV1MessageType57;
        GtpV1MessageType gtpV1MessageType58 = new GtpV1MessageType((byte) 118, "MBMS Session Stop Request");
        MBMS_SESSION_STOP_REQUEST = gtpV1MessageType58;
        GtpV1MessageType gtpV1MessageType59 = new GtpV1MessageType((byte) 119, "MBMS Session Stop Response");
        MBMS_SESSION_STOP_RESPONSE = gtpV1MessageType59;
        GtpV1MessageType gtpV1MessageType60 = new GtpV1MessageType((byte) 120, "MBMS Session Update Request");
        MBMS_SESSION_UPDATE_REQUEST = gtpV1MessageType60;
        GtpV1MessageType gtpV1MessageType61 = new GtpV1MessageType((byte) 121, "MBMS Session Update Response");
        MBMS_SESSION_UPDATE_RESPONSE = gtpV1MessageType61;
        GtpV1MessageType gtpV1MessageType62 = new GtpV1MessageType(Byte.MIN_VALUE, "MS Info Change Notification Request");
        MS_INFO_CHANGE_NOTIFICATION_REQUEST = gtpV1MessageType62;
        GtpV1MessageType gtpV1MessageType63 = new GtpV1MessageType((byte) -127, "MS Info Change Notification Response");
        MS_INFO_CHANGE_NOTIFICATION_RESPONSE = gtpV1MessageType63;
        GtpV1MessageType gtpV1MessageType64 = new GtpV1MessageType((byte) -16, "Data Record Transfer Request");
        DATA_RECORD_TRANSFER_REQUEST = gtpV1MessageType64;
        GtpV1MessageType gtpV1MessageType65 = new GtpV1MessageType((byte) -15, "Data Record Transfer Response");
        DATA_RECORD_TRANSFER_RESPONSE = gtpV1MessageType65;
        GtpV1MessageType gtpV1MessageType66 = new GtpV1MessageType((byte) -2, "End Marker");
        END_MARKER = gtpV1MessageType66;
        GtpV1MessageType gtpV1MessageType67 = new GtpV1MessageType((byte) -1, "G-PDU");
        G_PDU = gtpV1MessageType67;
        HashMap hashMap = new HashMap();
        registry = hashMap;
        hashMap.put(gtpV1MessageType.value(), gtpV1MessageType);
        hashMap.put(gtpV1MessageType2.value(), gtpV1MessageType2);
        hashMap.put(gtpV1MessageType3.value(), gtpV1MessageType3);
        hashMap.put(gtpV1MessageType4.value(), gtpV1MessageType4);
        hashMap.put(gtpV1MessageType5.value(), gtpV1MessageType5);
        hashMap.put(gtpV1MessageType6.value(), gtpV1MessageType6);
        hashMap.put(gtpV1MessageType7.value(), gtpV1MessageType7);
        hashMap.put(gtpV1MessageType8.value(), gtpV1MessageType8);
        hashMap.put(gtpV1MessageType9.value(), gtpV1MessageType9);
        hashMap.put(gtpV1MessageType10.value(), gtpV1MessageType10);
        hashMap.put(gtpV1MessageType11.value(), gtpV1MessageType11);
        hashMap.put(gtpV1MessageType12.value(), gtpV1MessageType12);
        hashMap.put(gtpV1MessageType13.value(), gtpV1MessageType13);
        hashMap.put(gtpV1MessageType14.value(), gtpV1MessageType14);
        hashMap.put(gtpV1MessageType15.value(), gtpV1MessageType15);
        hashMap.put(gtpV1MessageType16.value(), gtpV1MessageType16);
        hashMap.put(gtpV1MessageType17.value(), gtpV1MessageType17);
        hashMap.put(gtpV1MessageType18.value(), gtpV1MessageType18);
        hashMap.put(gtpV1MessageType19.value(), gtpV1MessageType19);
        hashMap.put(gtpV1MessageType20.value(), gtpV1MessageType20);
        hashMap.put(gtpV1MessageType21.value(), gtpV1MessageType21);
        hashMap.put(gtpV1MessageType22.value(), gtpV1MessageType22);
        hashMap.put(gtpV1MessageType23.value(), gtpV1MessageType23);
        hashMap.put(gtpV1MessageType24.value(), gtpV1MessageType24);
        hashMap.put(gtpV1MessageType25.value(), gtpV1MessageType25);
        hashMap.put(gtpV1MessageType26.value(), gtpV1MessageType26);
        hashMap.put(gtpV1MessageType27.value(), gtpV1MessageType27);
        hashMap.put(gtpV1MessageType28.value(), gtpV1MessageType28);
        hashMap.put(gtpV1MessageType29.value(), gtpV1MessageType29);
        hashMap.put(gtpV1MessageType30.value(), gtpV1MessageType30);
        hashMap.put(gtpV1MessageType31.value(), gtpV1MessageType31);
        hashMap.put(gtpV1MessageType32.value(), gtpV1MessageType32);
        hashMap.put(gtpV1MessageType33.value(), gtpV1MessageType33);
        hashMap.put(gtpV1MessageType34.value(), gtpV1MessageType34);
        hashMap.put(gtpV1MessageType35.value(), gtpV1MessageType35);
        hashMap.put(gtpV1MessageType39.value(), gtpV1MessageType39);
        hashMap.put(gtpV1MessageType36.value(), gtpV1MessageType36);
        hashMap.put(gtpV1MessageType37.value(), gtpV1MessageType37);
        hashMap.put(gtpV1MessageType38.value(), gtpV1MessageType38);
        hashMap.put(gtpV1MessageType40.value(), gtpV1MessageType40);
        hashMap.put(gtpV1MessageType41.value(), gtpV1MessageType41);
        hashMap.put(gtpV1MessageType42.value(), gtpV1MessageType42);
        hashMap.put(gtpV1MessageType43.value(), gtpV1MessageType43);
        hashMap.put(gtpV1MessageType44.value(), gtpV1MessageType44);
        hashMap.put(gtpV1MessageType45.value(), gtpV1MessageType45);
        hashMap.put(gtpV1MessageType46.value(), gtpV1MessageType46);
        hashMap.put(gtpV1MessageType47.value(), gtpV1MessageType47);
        hashMap.put(gtpV1MessageType48.value(), gtpV1MessageType48);
        hashMap.put(gtpV1MessageType49.value(), gtpV1MessageType49);
        hashMap.put(gtpV1MessageType50.value(), gtpV1MessageType50);
        hashMap.put(gtpV1MessageType51.value(), gtpV1MessageType51);
        hashMap.put(gtpV1MessageType52.value(), gtpV1MessageType52);
        hashMap.put(gtpV1MessageType53.value(), gtpV1MessageType53);
        hashMap.put(gtpV1MessageType54.value(), gtpV1MessageType54);
        hashMap.put(gtpV1MessageType55.value(), gtpV1MessageType55);
        hashMap.put(gtpV1MessageType56.value(), gtpV1MessageType56);
        hashMap.put(gtpV1MessageType57.value(), gtpV1MessageType57);
        hashMap.put(gtpV1MessageType58.value(), gtpV1MessageType58);
        hashMap.put(gtpV1MessageType59.value(), gtpV1MessageType59);
        hashMap.put(gtpV1MessageType60.value(), gtpV1MessageType60);
        hashMap.put(gtpV1MessageType61.value(), gtpV1MessageType61);
        hashMap.put(gtpV1MessageType62.value(), gtpV1MessageType62);
        hashMap.put(gtpV1MessageType63.value(), gtpV1MessageType63);
        hashMap.put(gtpV1MessageType64.value(), gtpV1MessageType64);
        hashMap.put(gtpV1MessageType65.value(), gtpV1MessageType65);
        hashMap.put(gtpV1MessageType66.value(), gtpV1MessageType66);
        hashMap.put(gtpV1MessageType67.value(), gtpV1MessageType67);
    }

    public GtpV1MessageType(Byte b10, String str) {
        super(b10, str);
    }

    public static GtpV1MessageType getInstance(Byte b10) {
        Map<Byte, GtpV1MessageType> map = registry;
        return map.containsKey(b10) ? map.get(b10) : new GtpV1MessageType(b10, "unknown");
    }

    public static GtpV1MessageType register(GtpV1MessageType gtpV1MessageType) {
        return registry.put(gtpV1MessageType.value(), gtpV1MessageType);
    }

    @Override // org.pcap4j.packet.namednumber.NamedNumber
    public int compareTo(GtpV1MessageType gtpV1MessageType) {
        return value().compareTo(gtpV1MessageType.value());
    }

    @Override // org.pcap4j.packet.namednumber.NamedNumber
    public String valueAsString() {
        return String.valueOf(value().byteValue() & 255);
    }
}
